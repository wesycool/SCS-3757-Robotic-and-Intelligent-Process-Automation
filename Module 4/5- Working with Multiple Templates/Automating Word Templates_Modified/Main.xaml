<Activity mc:Ignorable="sap sap2010" x:Class="Main" mva:VisualBasic.Settings="{x:Null}" sap:VirtualizedContainerService.HintSize="555.2,4326.4" sap2010:WorkflowViewState.IdRef="ActivityBuilder_1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:p="http://schemas.uipath.com/workflow/activities/word" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:uasb="clr-namespace:UiPath.Activities.System.Binding;assembly=UiPath.System.Activities" xmlns:ue="clr-namespace:UiPath.Excel;assembly=UiPath.Excel.Activities" xmlns:ueab="clr-namespace:UiPath.Excel.Activities.Business;assembly=UiPath.Excel.Activities" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="48">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Security</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Activities.System.Binding</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Word</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Mail</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="38">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Word.Activities</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext</AssemblyReference>
      <AssemblyReference>UiPath.Word</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <sap:WorkflowViewStateService.ViewState>
    <scg:Dictionary x:TypeArguments="x:String, x:Object">
      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
    </scg:Dictionary>
  </sap:WorkflowViewStateService.ViewState>
  <ueab:SequenceX sap:VirtualizedContainerService.HintSize="565.6,4261.6" sap2010:WorkflowViewState.IdRef="SequenceX_1">
    <ueab:SequenceX.Variables>
      <Variable x:TypeArguments="ue:IWorkbookQuickHandle" Default="[new WorkbookQuickHandle(workbookPath:=&quot;Project_Notebook.xlsx&quot;,visible:=True,autoSave:=False,createNew:=True,readOnly:=False,isWorkspace:=True)]" Name="Notes" />
      <Variable x:TypeArguments="uasb:BindingsRepository" Default="[new UiPath.Activities.System.Binding.BindingsRepository()]" Name="Saved" />
    </ueab:SequenceX.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ueab:ExcelApplicationCard Password="{x:Null}" sap2010:Annotation.AnnotationText="Using the Excel resourse to open the Resume_Data file" DisplayName="Use Excel File" sap:VirtualizedContainerService.HintSize="522.4,4170.4" sap2010:WorkflowViewState.IdRef="ExcelApplicationCard_1" WorkbookPath="Resume_Data.xlsx">
      <ueab:ExcelApplicationCard.Body>
        <ActivityAction x:TypeArguments="ue:IWorkbookQuickHandle">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="ue:IWorkbookQuickHandle" Name="Resume_Data" />
          </ActivityAction.Argument>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="510.4,3908.8" sap2010:WorkflowViewState.IdRef="Sequence_3">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <If sap2010:Annotation.AnnotationText="Checking in the Excel file if the Robot needs a Resume or not. In the iteration, you will have to replace the Excel cell with the Current Row correct value. &#xD;&#xA;&#xD;&#xA;If the value is no, in the iteration, the robot should skip current row." Condition="[Resume_Data.Sheet(&quot;Sheet1&quot;).Cell(&quot;A2&quot;) = string.Format(&quot;yes&quot;)]" sap:VirtualizedContainerService.HintSize="467.2,724.8" sap2010:WorkflowViewState.IdRef="If_1">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If.Then>
                <Sequence sap:VirtualizedContainerService.HintSize="448,469.6" sap2010:WorkflowViewState.IdRef="Sequence_1">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:CopyFile ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="If the robot needs a resume, we copy the indicated resume template &#xA;Notice we indicated the folder, then the Excel cell that holds the information regarding the template to use, then we added &quot;.docx&quot;.&#xA;&#xA;We copy and rename the template file by indicating the destination folder &quot;Edited Resumes\&quot;, then the cell containing the robot's name, then the cell containing the templates name, and we added at the end &quot;.docx&quot;&#xA;&#xA;In the iteration, you will have to replace the Excel cells with the Current Row correct value." Destination="[string.Format(&quot;Edited Resumes\{0}_{1}.docx&quot;, Resume_Data.Sheet(&quot;Sheet1&quot;).Cell(&quot;C2&quot;), Resume_Data.Sheet(&quot;Sheet1&quot;).Cell(&quot;B2&quot;))]" DisplayName="Copy File" sap:VirtualizedContainerService.HintSize="404.8,378.4" sap2010:WorkflowViewState.IdRef="CopyFile_1" Overwrite="True" Path="[string.Format(&quot;Resume Templates\{0}.docx&quot;, Resume_Data.Sheet(&quot;Sheet1&quot;).Cell(&quot;B2&quot;))]">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:CopyFile>
                </Sequence>
              </If.Then>
              <If.Else>
                <Sequence sap2010:WorkflowViewState.IdRef="Sequence_2">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </Sequence>
              </If.Else>
            </If>
            <p:WordApplicationScope sap2010:Annotation.AnnotationText="We use the newly created file. In the iteration, you will have to replace the Excel cells with the Current Row correct value. The Word file's location is the same one as of the newly created file in the Copy File action." DisplayName="Use Word File " FilePath="[string.Format(&quot;Edited Resumes\{0}_{1}.docx&quot;, Resume_Data.Sheet(&quot;Sheet1&quot;).Cell(&quot;C2&quot;), Resume_Data.Sheet(&quot;Sheet1&quot;).Cell(&quot;B2&quot;))]" sap:VirtualizedContainerService.HintSize="467.2,3052.8" sap2010:WorkflowViewState.IdRef="WordApplicationScope_1">
              <p:WordApplicationScope.Body>
                <ActivityAction x:TypeArguments="ui:WordDocument">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="ui:WordDocument" Name="WordDocumentScope" />
                  </ActivityAction.Argument>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="455.2,2854.4" sap2010:WorkflowViewState.IdRef="Sequence_4">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <p:WordReplacePicture sap2010:Annotation.AnnotationText="Replacing the placeholder photo with the robot's picture." DisplayName="Replace Picture" sap:VirtualizedContainerService.HintSize="412,168.8" sap2010:WorkflowViewState.IdRef="WordReplacePicture_1" PictureAltText="Photo_Placeholder" PicturePath="[string.Format(&quot;Pictures\{0}.png&quot;, Resume_Data.Sheet(&quot;Sheet1&quot;).Cell(&quot;C2&quot;))]">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </p:WordReplacePicture>
                    <p:WordReplaceText Found="{x:Null}" sap2010:Annotation.AnnotationText="This applies to all the Replace Text actions that follow: the Excel file is created in such way, that  each header cell contains the expression from the Word template that needs to be replaced.&#xA;&#xA;In the iteration, the value &quot;Search for&quot; will not change. You will instead have to to update the &quot;Replace with&quot; value" DisplayName="Replace Text &lt;Name&gt;" sap:VirtualizedContainerService.HintSize="412,245.6" sap2010:WorkflowViewState.IdRef="WordReplaceText_1" Replace="[Resume_Data.Sheet(&quot;Sheet1&quot;).Cell(&quot;C2&quot;)]" Search="[Resume_Data.Sheet(&quot;Sheet1&quot;).Cell(&quot;C1&quot;)]">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </p:WordReplaceText>
                    <p:WordReplaceText Found="{x:Null}" DisplayName="Replace Text &lt;phone number&gt;" sap:VirtualizedContainerService.HintSize="412,137.6" sap2010:WorkflowViewState.IdRef="WordReplaceText_2" Replace="[Resume_Data.Sheet(&quot;Sheet1&quot;).Cell(&quot;D2&quot;)]" Search="[Resume_Data.Sheet(&quot;Sheet1&quot;).Cell(&quot;D1&quot;)]" />
                    <p:WordReplaceText Found="{x:Null}" DisplayName="Replace Text &lt;email address&gt;" sap:VirtualizedContainerService.HintSize="412,137.6" sap2010:WorkflowViewState.IdRef="WordReplaceText_3" Replace="[Resume_Data.Sheet(&quot;Sheet1&quot;).Cell(&quot;E2&quot;)]" Search="[Resume_Data.Sheet(&quot;Sheet1&quot;).Cell(&quot;E1&quot;)]" />
                    <p:WordReplaceText Found="{x:Null}" DisplayName="Replace Text &lt;Profile Details&gt;" sap:VirtualizedContainerService.HintSize="412,137.6" sap2010:WorkflowViewState.IdRef="WordReplaceText_4" Replace="[Resume_Data.Sheet(&quot;Sheet1&quot;).Cell(&quot;F2&quot;)]" Search="[Resume_Data.Sheet(&quot;Sheet1&quot;).Cell(&quot;F1&quot;)]" />
                    <p:WordReplaceText Found="{x:Null}" DisplayName="Replace Text &lt;Experience1&gt;" sap:VirtualizedContainerService.HintSize="412,137.6" sap2010:WorkflowViewState.IdRef="WordReplaceText_5" Replace="[Resume_Data.Sheet(&quot;Sheet1&quot;).Cell(&quot;G2&quot;)]" Search="[Resume_Data.Sheet(&quot;Sheet1&quot;).Cell(&quot;G1&quot;)]" />
                    <p:WordReplaceText Found="{x:Null}" DisplayName="Replace Text &lt;Experience 1 Details&gt;" sap:VirtualizedContainerService.HintSize="412,137.6" sap2010:WorkflowViewState.IdRef="WordReplaceText_6" Replace="[Resume_Data.Sheet(&quot;Sheet1&quot;).Cell(&quot;H2&quot;)]" Search="[Resume_Data.Sheet(&quot;Sheet1&quot;).Cell(&quot;H1&quot;)]" />
                    <p:WordReplaceText Found="{x:Null}" DisplayName="Replace Text &lt;Experience 2&gt;" sap:VirtualizedContainerService.HintSize="412,137.6" sap2010:WorkflowViewState.IdRef="WordReplaceText_7" Replace="[Resume_Data.Sheet(&quot;Sheet1&quot;).Cell(&quot;I2&quot;)]" Search="[Resume_Data.Sheet(&quot;Sheet1&quot;).Cell(&quot;I1&quot;)]" />
                    <p:WordReplaceText Found="{x:Null}" DisplayName="Replace Text &lt;Experience 2 Details&gt;" sap:VirtualizedContainerService.HintSize="412,137.6" sap2010:WorkflowViewState.IdRef="WordReplaceText_8" Replace="[Resume_Data.Sheet(&quot;Sheet1&quot;).Cell(&quot;J2&quot;)]" Search="[Resume_Data.Sheet(&quot;Sheet1&quot;).Cell(&quot;J1&quot;)]" />
                    <p:WordReplaceText Found="{x:Null}" DisplayName="Replace Text &lt;Experience 3&gt;" sap:VirtualizedContainerService.HintSize="412,137.6" sap2010:WorkflowViewState.IdRef="WordReplaceText_9" Replace="[Resume_Data.Sheet(&quot;Sheet1&quot;).Cell(&quot;K2&quot;)]" Search="[Resume_Data.Sheet(&quot;Sheet1&quot;).Cell(&quot;K1&quot;)]" />
                    <p:WordReplaceText Found="{x:Null}" DisplayName="Replace Text &lt;Experience 3 Details&gt;" sap:VirtualizedContainerService.HintSize="412,137.6" sap2010:WorkflowViewState.IdRef="WordReplaceText_10" Replace="[Resume_Data.Sheet(&quot;Sheet1&quot;).Cell(&quot;L2&quot;)]" Search="[Resume_Data.Sheet(&quot;Sheet1&quot;).Cell(&quot;L1&quot;)]" />
                    <p:WordReplaceText Found="{x:Null}" DisplayName="Replace Text &lt;Education 1&gt;" sap:VirtualizedContainerService.HintSize="412,137.6" sap2010:WorkflowViewState.IdRef="WordReplaceText_11" Replace="[Resume_Data.Sheet(&quot;Sheet1&quot;).Cell(&quot;M2&quot;)]" Search="[Resume_Data.Sheet(&quot;Sheet1&quot;).Cell(&quot;M1&quot;)]" />
                    <p:WordReplaceText Found="{x:Null}" DisplayName="Replace Text &lt;Education 1 Details&gt;" sap:VirtualizedContainerService.HintSize="412,137.6" sap2010:WorkflowViewState.IdRef="WordReplaceText_12" Replace="[Resume_Data.Sheet(&quot;Sheet1&quot;).Cell(&quot;N2&quot;)]" Search="[Resume_Data.Sheet(&quot;Sheet1&quot;).Cell(&quot;N1&quot;)]" />
                    <p:WordReplaceText Found="{x:Null}" DisplayName="Replace Text &lt;Education 2&gt;" sap:VirtualizedContainerService.HintSize="412,137.6" sap2010:WorkflowViewState.IdRef="WordReplaceText_13" Replace="[Resume_Data.Sheet(&quot;Sheet1&quot;).Cell(&quot;O2&quot;)]" Search="[Resume_Data.Sheet(&quot;Sheet1&quot;).Cell(&quot;O1&quot;)]" />
                    <p:WordReplaceText Found="{x:Null}" DisplayName="Replace Text &lt;Education 2 Details&gt;" sap:VirtualizedContainerService.HintSize="412,137.6" sap2010:WorkflowViewState.IdRef="WordReplaceText_14" Replace="[Resume_Data.Sheet(&quot;Sheet1&quot;).Cell(&quot;P2&quot;)]" Search="[Resume_Data.Sheet(&quot;Sheet1&quot;).Cell(&quot;P1&quot;)]" />
                  </Sequence>
                </ActivityAction>
              </p:WordApplicationScope.Body>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </p:WordApplicationScope>
          </Sequence>
        </ActivityAction>
      </ueab:ExcelApplicationCard.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ueab:ExcelApplicationCard>
  </ueab:SequenceX>
</Activity>