<Activity mc:Ignorable="sap sap2010" x:Class="Main" mva:VisualBasic.Settings="{x:Null}" sap:VirtualizedContainerService.HintSize="1102,3449.33333333333" sap2010:WorkflowViewState.IdRef="ActivityBuilder_1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:si="clr-namespace:System.IO;assembly=mscorlib" xmlns:uasb="clr-namespace:UiPath.Activities.System.Binding;assembly=UiPath.System.Activities" xmlns:ue="clr-namespace:UiPath.Excel;assembly=UiPath.Excel.Activities" xmlns:ueab="clr-namespace:UiPath.Excel.Activities.Business;assembly=UiPath.Excel.Activities" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:um="clr-namespace:UiPath.Mail;assembly=UiPath.Mail.Activities" xmlns:umab="clr-namespace:UiPath.Mail.Activities.Business;assembly=UiPath.Mail.Activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="48">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Security</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Activities.System.Binding</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Word</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Mail</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="38">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Word.Activities</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext</AssemblyReference>
      <AssemblyReference>UiPath.Word</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <sap:WorkflowViewStateService.ViewState>
    <scg:Dictionary x:TypeArguments="x:String, x:Object">
      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
    </scg:Dictionary>
  </sap:WorkflowViewStateService.ViewState>
  <ueab:SequenceX sap:VirtualizedContainerService.HintSize="670,3384.66666666667" sap2010:WorkflowViewState.IdRef="SequenceX_1">
    <ueab:SequenceX.Variables>
      <Variable x:TypeArguments="ue:IWorkbookQuickHandle" Default="[new WorkbookQuickHandle(workbookPath:=&quot;Project_Notebook.xlsx&quot;,visible:=True,autoSave:=False,createNew:=True,readOnly:=False,isWorkspace:=True)]" Name="Notes" />
      <Variable x:TypeArguments="uasb:BindingsRepository" Default="[new UiPath.Activities.System.Binding.BindingsRepository()]" Name="Saved" />
    </ueab:SequenceX.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ueab:ExcelApplicationCard Password="{x:Null}" sap2010:Annotation.AnnotationText="This robot goes through this Excel file and creates folders, copies and renames template files based on the information found. &#xA;&#xA;---&gt;&gt;&gt;&#xA;To solve the error that the file could not be found, make sure that you use the Current Event List.xlsx file&#xA;&#xA;The resource will also create a file named Current Event List.xlsx if it doesn't find it." DisplayName="Use Excel File" sap:VirtualizedContainerService.HintSize="628,3294.66666666667" sap2010:WorkflowViewState.IdRef="ExcelApplicationCard_1" WorkbookPath="Current Event List.xlsx">
      <ueab:ExcelApplicationCard.Body>
        <ActivityAction x:TypeArguments="ue:IWorkbookQuickHandle">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="ue:IWorkbookQuickHandle" Name="Event_List" />
          </ActivityAction.Argument>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="616,2924.66666666667" sap2010:WorkflowViewState.IdRef="Sequence_5">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ueab:ExcelForEachRow sap2010:Annotation.AnnotationText="Here, the robot goes through all the rows in the Event List Sheet.&#xA;&#xA;---&gt;&gt;&gt;&#xA;We repaired this error by updating the range with the correct one.&#xA;" DisplayName="Excel For Each Row" EmptyRowBehavior="Skip" HasHeaders="True" sap:VirtualizedContainerService.HintSize="574,2834.66666666667" sap2010:WorkflowViewState.IdRef="ExcelForEachRow_1" Range="[Event_List.Table(&quot;Events&quot;)]" SaveAfterEachRow="False">
              <ueab:ExcelForEachRow.Body>
                <ActivityAction x:TypeArguments="ue:CurrentRowQuickHandle, x:Int32">
                  <ActivityAction.Argument1>
                    <DelegateInArgument x:TypeArguments="ue:CurrentRowQuickHandle" Name="CurrentRow" />
                  </ActivityAction.Argument1>
                  <ActivityAction.Argument2>
                    <DelegateInArgument x:TypeArguments="x:Int32" Name="CurrentIndex" />
                  </ActivityAction.Argument2>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="562,2546.66666666667" sap2010:WorkflowViewState.IdRef="Sequence_4">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:FolderExistsX sap2010:Annotation.AnnotationText="The robot checks here if a folder that's named with the Excel value &quot;Month&quot; exists already or not" DisplayName="Folder Exists" Exists="[Saved.Values(Of Boolean)(&quot;Folder Exists&quot;)]" sap:VirtualizedContainerService.HintSize="520,180" sap2010:WorkflowViewState.IdRef="FolderExistsX_1" Path="[string.Format(&quot;{0}\Events\{1}&quot;, Environment.GetFolderPath(Environment.SpecialFolder.MyDocuments), CurrentRow.ByField(&quot;Month&quot;))]">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:FolderExistsX>
                    <If sap2010:Annotation.AnnotationText="If the folder does not exist, then the robot creates one. This validation is necessary so that the robot will not create folders for every row." Condition="[Saved.Values(Of Boolean)(&quot;Folder Exists&quot;) = false]" sap:VirtualizedContainerService.HintSize="520,396" sap2010:WorkflowViewState.IdRef="If_1">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <If.Then>
                        <Sequence sap:VirtualizedContainerService.HintSize="400,170" sap2010:WorkflowViewState.IdRef="Sequence_1">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:CreateDirectory ContinueOnError="{x:Null}" DisplayName="Create Folder for Month" sap:VirtualizedContainerService.HintSize="358,80" sap2010:WorkflowViewState.IdRef="CreateDirectory_1" Path="[string.Format(&quot;{0}\Events\{1}&quot;, Environment.GetFolderPath(Environment.SpecialFolder.MyDocuments), CurrentRow.ByField(&quot;Month&quot;))]" />
                        </Sequence>
                      </If.Then>
                      <If.Else>
                        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_2">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </Sequence>
                      </If.Else>
                    </If>
                    <ui:CreateDirectory ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Inside the month folder, the robot will create a folder for each event." DisplayName="Create Folder for Event" sap:VirtualizedContainerService.HintSize="520,125.333333333333" sap2010:WorkflowViewState.IdRef="CreateDirectory_2" Path="[string.Format(&quot;{0}\Events\{1}\{2}_{3}_{4}&quot;, Environment.GetFolderPath(Environment.SpecialFolder.MyDocuments), CurrentRow.ByField(&quot;Month&quot;), CurrentRow.ByField(&quot;Event Name&quot;), CurrentRow.ByField(&quot;Location&quot;), CurrentRow.ByField(&quot;Date&quot;))]">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:CreateDirectory>
                    <ui:ForEachFileX sap2010:Annotation.AnnotationText="Here the robot goes through all the template files, from the Template folder....&#xA;---&gt;&gt;&gt;&#xA;To solve the error that the folder could not be found, make sure that you indicate the right location of the Templates folder (which you downloaded with the Working Documents.)&#xA;&#xA;" DisplayName="For Each File In Folder" Folder="[string.Format(&quot;{0}\Templates&quot;, Directory.GetCurrentDirectory())]" sap:VirtualizedContainerService.HintSize="520,1635.33333333333" sap2010:WorkflowViewState.IdRef="ForEachFileX_1" IncludeSubDirectories="False" OrderBy="NameAscFirst">
                      <ui:ForEachFileX.Body>
                        <ActivityAction x:TypeArguments="si:FileInfo, x:Int32">
                          <ActivityAction.Argument1>
                            <DelegateInArgument x:TypeArguments="si:FileInfo" Name="CurrentFile" />
                          </ActivityAction.Argument1>
                          <ActivityAction.Argument2>
                            <DelegateInArgument x:TypeArguments="x:Int32" Name="CurrentIndex" />
                          </ActivityAction.Argument2>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="508,1279.33333333333" sap2010:WorkflowViewState.IdRef="Sequence_3">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:CopyFile ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="...and copies them in the event folder and renames them with the event details." Destination="[string.Format(&quot;{0}\Events\{1}\{2}_{3}_{4}\{5}_{6}_{7}_{8}&quot;, Environment.GetFolderPath(Environment.SpecialFolder.MyDocuments), CurrentRow.ByField(&quot;Month&quot;), CurrentRow.ByField(&quot;Event Name&quot;), CurrentRow.ByField(&quot;Location&quot;), CurrentRow.ByField(&quot;Date&quot;), CurrentRow.ByField(&quot;Event Name&quot;), CurrentRow.ByField(&quot;Location&quot;), CurrentRow.ByField(&quot;Date&quot;), CurrentFile.Name)]" DisplayName="Copy Template Files and Rename them" sap:VirtualizedContainerService.HintSize="466,206.666666666667" sap2010:WorkflowViewState.IdRef="CopyFile_1" Overwrite="True" Path="[CurrentFile.FullName]">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:CopyFile>
                            <umab:OutlookApplicationCard Account="{x:Null}" sap2010:Annotation.AnnotationText="The robot opens the Outlook account.&#xA;---&gt;&gt;&gt;&#xA;To solve the error that the Current file could not be found, we drag the resource inside the For Each File in Folder action.&#xA;" DisplayName="Use Outlook Account" sap:VirtualizedContainerService.HintSize="466,942.666666666667" sap2010:WorkflowViewState.IdRef="OutlookApplicationCard_1">
                              <umab:OutlookApplicationCard.Body>
                                <ActivityAction x:TypeArguments="um:IMailQuickHandle">
                                  <ActivityAction.Argument>
                                    <DelegateInArgument x:TypeArguments="um:IMailQuickHandle" Name="Outlook" />
                                  </ActivityAction.Argument>
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="454,655.333333333333" sap2010:WorkflowViewState.IdRef="Sequence_6">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <umab:SendMailX Bcc="{x:Null}" Cc="{x:Null}" Account="[Outlook]" sap2010:Annotation.AnnotationText="For each event, the robot will send an email to the Event Coordinator. It will add details about the event in the Subject and Body and attach the event related documents.&#xA;&#xA;---&gt;&gt;&gt;&#xA;To solve the error that the attachment could not be found, we copied the attachment's location from the  &quot;Copy Template Files and Rename them&quot; action.&#xA;" Body="[string.Format(&quot;Hi there,{0}{1}Find attached the documents that you need to work on for {2} taking place in {3} on {4}. Please send them back completed.{5}{6}Thanks!&quot;, Environment.NewLine, Environment.NewLine, CurrentRow.ByField(&quot;Event Name&quot;), CurrentRow.ByField(&quot;Location&quot;), CurrentRow.ByField(&quot;Date&quot;), Environment.NewLine, Environment.NewLine)]" DisplayName="Send Outlook Email" sap:VirtualizedContainerService.HintSize="412,565.333333333333" sap2010:WorkflowViewState.IdRef="SendMailX_1" IsDraft="False" MaxBodyDocumentSizeMB="2" Subject="[string.Format(&quot;{0} {1} {2} documents&quot;, CurrentRow.ByField(&quot;Event Name&quot;), CurrentRow.ByField(&quot;Location&quot;), CurrentRow.ByField(&quot;Date&quot;))]" To="citizen.developer@uipath.com">
                                      <umab:SendMailX.Files>
                                        <scg:List x:TypeArguments="InArgument(x:String)" Capacity="4">
                                          <InArgument x:TypeArguments="x:String">[string.Format("{0}\Events\{1}\{2}_{3}_{4}\{5}_{6}_{7}_{8}", Environment.GetFolderPath(Environment.SpecialFolder.MyDocuments), CurrentRow.ByField("Month"), CurrentRow.ByField("Event Name"), CurrentRow.ByField("Location"), CurrentRow.ByField("Date"), CurrentRow.ByField("Event Name"), CurrentRow.ByField("Location"), CurrentRow.ByField("Date"), CurrentFile.Name)]</InArgument>
                                        </scg:List>
                                      </umab:SendMailX.Files>
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </umab:SendMailX>
                                  </Sequence>
                                </ActivityAction>
                              </umab:OutlookApplicationCard.Body>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </umab:OutlookApplicationCard>
                          </Sequence>
                        </ActivityAction>
                      </ui:ForEachFileX.Body>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:ForEachFileX>
                  </Sequence>
                </ActivityAction>
              </ueab:ExcelForEachRow.Body>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ueab:ExcelForEachRow>
          </Sequence>
        </ActivityAction>
      </ueab:ExcelApplicationCard.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ueab:ExcelApplicationCard>
  </ueab:SequenceX>
</Activity>