<Activity mc:Ignorable="sap sap2010" x:Class="Main" mva:VisualBasic.Settings="{x:Null}" sap:VirtualizedContainerService.HintSize="563.2,2020" sap2010:WorkflowViewState.IdRef="ActivityBuilder_1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:si="clr-namespace:System.IO;assembly=mscorlib" xmlns:uasb="clr-namespace:UiPath.Activities.System.Binding;assembly=UiPath.System.Activities" xmlns:ue="clr-namespace:UiPath.Excel;assembly=UiPath.Excel.Activities" xmlns:ueab="clr-namespace:UiPath.Excel.Activities.Business;assembly=UiPath.Excel.Activities" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="48">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Security</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Activities.System.Binding</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Word</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Mail</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="38">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Word.Activities</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext</AssemblyReference>
      <AssemblyReference>UiPath.Word</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <ueab:SequenceX sap:VirtualizedContainerService.HintSize="573.6,1955.2" sap2010:WorkflowViewState.IdRef="SequenceX_1">
    <ueab:SequenceX.Variables>
      <Variable x:TypeArguments="ue:IWorkbookQuickHandle" Default="[new WorkbookQuickHandle(workbookPath:=&quot;Project_Notebook.xlsx&quot;,visible:=True,autoSave:=False,createNew:=True,readOnly:=False,isWorkspace:=True)]" Name="Notes" />
      <Variable x:TypeArguments="uasb:BindingsRepository" Default="[new UiPath.Activities.System.Binding.BindingsRepository()]" Name="Saved" />
    </ueab:SequenceX.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:FolderExistsX sap2010:Annotation.AnnotationText="The robot checks if the Sorted folder already exists or not, and stores its findings in the SortedFolder value." DisplayName="Folder Exists" Exists="[Saved.Values(Of Boolean)(&quot;SortedFolder&quot;)]" sap:VirtualizedContainerService.HintSize="530.4,176.8" sap2010:WorkflowViewState.IdRef="FolderExistsX_1" Path="[string.Format(&quot;{0}\Sorted&quot;, Directory.GetCurrentDirectory())]">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:FolderExistsX>
    <If sap2010:Annotation.AnnotationText="If the folder Sorted doesn't exist, then the robot creates one.&#xD;&#xA;" Condition="[Saved.Values(Of Boolean)(&quot;SortedFolder&quot;) = false]" sap:VirtualizedContainerService.HintSize="530.4,393.6" sap2010:WorkflowViewState.IdRef="If_1">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <If.Then>
        <Sequence sap:VirtualizedContainerService.HintSize="448,170.4" sap2010:WorkflowViewState.IdRef="Sequence_1">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:CreateDirectory ContinueOnError="{x:Null}" DisplayName="Create Folder" sap:VirtualizedContainerService.HintSize="404.8,79.2" sap2010:WorkflowViewState.IdRef="CreateDirectory_1" Path="[string.Format(&quot;{0}\Sorted&quot;, Directory.GetCurrentDirectory())]" />
        </Sequence>
      </If.Then>
      <If.Else>
        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_2">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </Sequence>
      </If.Else>
    </If>
    <ui:ForEachFileX sap2010:Annotation.AnnotationText="The robot goes through all the files from the Files folder and..." DisplayName="For Each File In Folder" Folder="[string.Format(&quot;{0}\Files&quot;, Directory.GetCurrentDirectory())]" sap:VirtualizedContainerService.HintSize="530.4,999.2" sap2010:WorkflowViewState.IdRef="ForEachFileX_1" IncludeSubDirectories="False" OrderBy="NameAscFirst">
      <ui:ForEachFileX.Body>
        <ActivityAction x:TypeArguments="si:FileInfo, x:Int32">
          <ActivityAction.Argument1>
            <DelegateInArgument x:TypeArguments="si:FileInfo" Name="CurrentFile" />
          </ActivityAction.Argument1>
          <ActivityAction.Argument2>
            <DelegateInArgument x:TypeArguments="x:Int32" Name="CurrentIndex" />
          </ActivityAction.Argument2>
          <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="518.4,735.2" sap2010:WorkflowViewState.IdRef="Sequence_10">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ueab:WriteCellX sap2010:Annotation.AnnotationText="... using Project Notebook, the robot writes the file's name inside the FileName cell. &#xD;&#xA;&#xD;&#xA;If you look in Project Notebook, inside the File sheet, with just the file's name, the robot can further obtain the file's extension, name without the extension and the folder." Cell="[Notes.Sheet(&quot;File&quot;).Cell(&quot;FileName&quot;)]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="475.2,271.2" sap2010:WorkflowViewState.IdRef="WriteCellX_1" Value="[CurrentFile.Name]">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ueab:WriteCellX>
            <Switch x:TypeArguments="x:String" sap2010:Annotation.AnnotationText="The robot uses the file's extension (found in Project Noteboot) to figure out where to move the file. &#xD;&#xA;If it's a png, the file will go inside the Pictures folder, but firts it checks if the folder exists.&#xD;&#xA;If it's a pptx, the file will go inside the Presentations folder and so on.&#xD;&#xA;&#xD;&#xA;All the files that are not png, pptx, xlsx or pdf get deleted." DisplayName="Switch" Expression="[Notes.Sheet(&quot;File&quot;).Cell(&quot;FileExtension&quot;)]" sap:VirtualizedContainerService.HintSize="475.2,332.8" sap2010:WorkflowViewState.IdRef="Switch`1_1">
              <Switch.Default>
                <Sequence sap:VirtualizedContainerService.HintSize="460,170.4" sap2010:WorkflowViewState.IdRef="Sequence_9">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:DeleteFileX DisplayName="Delete File" sap:VirtualizedContainerService.HintSize="416.8,79.2" sap2010:WorkflowViewState.IdRef="DeleteFileX_1" Path="[CurrentFile.FullName]" />
                </Sequence>
              </Switch.Default>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Sequence x:Key="png" sap:VirtualizedContainerService.HintSize="504.8,812" sap2010:WorkflowViewState.IdRef="Sequence_5">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:FolderExistsX DisplayName="Folder Exists" Exists="[Saved.Values(Of Boolean)(&quot;ImagesFolder&quot;)]" sap:VirtualizedContainerService.HintSize="461.6,132.8" sap2010:WorkflowViewState.IdRef="FolderExistsX_2" Path="[string.Format(&quot;{0}\Sorted\Images&quot;, Directory.GetCurrentDirectory())]" />
                <If Condition="[Saved.Values(Of Boolean)(&quot;ImagesFolder&quot;) = false]" sap:VirtualizedContainerService.HintSize="461.6,349.6" sap2010:WorkflowViewState.IdRef="If_2">
                  <If.Then>
                    <Sequence sap:VirtualizedContainerService.HintSize="448,170.4" sap2010:WorkflowViewState.IdRef="Sequence_3">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:CreateDirectory ContinueOnError="{x:Null}" DisplayName="Create Folder" sap:VirtualizedContainerService.HintSize="404.8,79.2" sap2010:WorkflowViewState.IdRef="CreateDirectory_2" Path="[string.Format(&quot;{0}\Sorted\Images&quot;, Directory.GetCurrentDirectory())]" />
                    </Sequence>
                  </If.Then>
                  <If.Else>
                    <Sequence sap2010:WorkflowViewState.IdRef="Sequence_4">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </Sequence>
                  </If.Else>
                </If>
                <ui:MoveFile ContinueOnError="{x:Null}" Destination="[string.Format(&quot;{0}\Sorted\Images\&quot;, Directory.GetCurrentDirectory())]" DisplayName="Move File" sap:VirtualizedContainerService.HintSize="461.6,158.4" sap2010:WorkflowViewState.IdRef="MoveFile_1" Overwrite="False" Path="[CurrentFile.FullName]" />
              </Sequence>
              <Sequence x:Key="pptx" sap:VirtualizedContainerService.HintSize="504.8,812" sap2010:WorkflowViewState.IdRef="Sequence_6">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:FolderExistsX DisplayName="Folder Exists" Exists="[Saved.Values(Of Boolean)(&quot;PresentationsFolder&quot;)]" sap:VirtualizedContainerService.HintSize="461.6,132.8" sap2010:WorkflowViewState.IdRef="FolderExistsX_3" Path="[string.Format(&quot;{0}\Sorted\Presentations&quot;, Directory.GetCurrentDirectory())]" />
                <If Condition="[Saved.Values(Of Boolean)(&quot;PresentationsFolder&quot;) = false]" sap:VirtualizedContainerService.HintSize="461.6,349.6" sap2010:WorkflowViewState.IdRef="If_3">
                  <If.Then>
                    <Sequence sap:VirtualizedContainerService.HintSize="448,170.4" sap2010:WorkflowViewState.IdRef="Sequence_11">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:CreateDirectory ContinueOnError="{x:Null}" DisplayName="Create Folder" sap:VirtualizedContainerService.HintSize="404.8,79.2" sap2010:WorkflowViewState.IdRef="CreateDirectory_3" Path="[string.Format(&quot;{0}\Sorted\Presentations&quot;, Directory.GetCurrentDirectory())]" />
                    </Sequence>
                  </If.Then>
                  <If.Else>
                    <Sequence sap2010:WorkflowViewState.IdRef="Sequence_12">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </Sequence>
                  </If.Else>
                </If>
                <ui:MoveFile ContinueOnError="{x:Null}" Destination="[string.Format(&quot;{0}\Sorted\Presentations\&quot;, Directory.GetCurrentDirectory())]" DisplayName="Move File" sap:VirtualizedContainerService.HintSize="461.6,158.4" sap2010:WorkflowViewState.IdRef="MoveFile_2" Overwrite="False" Path="[CurrentFile.FullName]" />
              </Sequence>
              <Sequence x:Key="xlsx" sap:VirtualizedContainerService.HintSize="511.2,814.4" sap2010:WorkflowViewState.IdRef="Sequence_15">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:FolderExistsX DisplayName="Folder Exists" Exists="[Saved.Values(Of Boolean)(&quot;ExcelFolder&quot;)]" sap:VirtualizedContainerService.HintSize="468,132.8" sap2010:WorkflowViewState.IdRef="FolderExistsX_4" Path="[string.Format(&quot;{0}\Sorted\Excel&quot;, Directory.GetCurrentDirectory())]" />
                <If Condition="[Saved.Values(Of Boolean)(&quot;ExcelFolder&quot;) = false]" sap:VirtualizedContainerService.HintSize="468,352" sap2010:WorkflowViewState.IdRef="If_4">
                  <If.Then>
                    <Sequence sap:VirtualizedContainerService.HintSize="448,172.8" sap2010:WorkflowViewState.IdRef="Sequence_13">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:CreateDirectory ContinueOnError="{x:Null}" DisplayName="Create Folder" sap:VirtualizedContainerService.HintSize="404.8,81.6" sap2010:WorkflowViewState.IdRef="CreateDirectory_4" Path="[string.Format(&quot;{0}\Sorted\Excel&quot;, Directory.GetCurrentDirectory())]" />
                    </Sequence>
                  </If.Then>
                  <If.Else>
                    <Sequence sap2010:WorkflowViewState.IdRef="Sequence_14">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </Sequence>
                  </If.Else>
                </If>
                <ui:MoveFile ContinueOnError="{x:Null}" Destination="[string.Format(&quot;{0}\Sorted\Excel\&quot;, Directory.GetCurrentDirectory())]" DisplayName="Move File" sap:VirtualizedContainerService.HintSize="468,158.4" sap2010:WorkflowViewState.IdRef="MoveFile_3" Overwrite="False" Path="[CurrentFile.FullName]" />
              </Sequence>
              <Sequence x:Key="pdf" sap:VirtualizedContainerService.HintSize="511.2,814.4" sap2010:WorkflowViewState.IdRef="Sequence_18">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:FolderExistsX DisplayName="Folder Exists" Exists="[Saved.Values(Of Boolean)(&quot;OnePagerFolder&quot;)]" sap:VirtualizedContainerService.HintSize="468,132.8" sap2010:WorkflowViewState.IdRef="FolderExistsX_5" Path="[string.Format(&quot;{0}\Sorted\OnePager&quot;, Directory.GetCurrentDirectory())]" />
                <If Condition="[Saved.Values(Of Boolean)(&quot;OnePagerFolder&quot;) = false]" sap:VirtualizedContainerService.HintSize="468,352" sap2010:WorkflowViewState.IdRef="If_5">
                  <If.Then>
                    <Sequence sap:VirtualizedContainerService.HintSize="448,172.8" sap2010:WorkflowViewState.IdRef="Sequence_16">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:CreateDirectory ContinueOnError="{x:Null}" DisplayName="Create Folder" sap:VirtualizedContainerService.HintSize="404.8,81.6" sap2010:WorkflowViewState.IdRef="CreateDirectory_5" Path="[string.Format(&quot;{0}\Sorted\OnePager&quot;, Directory.GetCurrentDirectory())]" />
                    </Sequence>
                  </If.Then>
                  <If.Else>
                    <Sequence sap2010:WorkflowViewState.IdRef="Sequence_17">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </Sequence>
                  </If.Else>
                </If>
                <ui:MoveFile ContinueOnError="{x:Null}" Destination="[string.Format(&quot;{0}\Sorted\OnePager\&quot;, Directory.GetCurrentDirectory())]" DisplayName="Move File" sap:VirtualizedContainerService.HintSize="468,158.4" sap2010:WorkflowViewState.IdRef="MoveFile_4" Overwrite="False" Path="[CurrentFile.FullName]" />
              </Sequence>
            </Switch>
          </Sequence>
        </ActivityAction>
      </ui:ForEachFileX.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:ForEachFileX>
  </ueab:SequenceX>
</Activity>